// If you want to run as a non-root user in the container, see docker-compose.yml.
{
  "name": "Agrariy Core Rails App",

  // Update the 'dockerComposeFile' list if you have more compose files or use different names.
  // The docker-compose.yml file contains any overrides you need/want to make.
  "dockerComposeFile": "docker-compose.yml",

  // The 'service' property is the name of the service for the container that VS Code should
  // use. Update this value and docker-compose.yml to the real service name.
  "service": "agrariy-app",

  // The optional 'workspaceFolder' property is the path VS Code should open by default when
  // connected. This is typically a file mount in docker-compose.yml
  "workspaceFolder": "/workspace",

  "customizations": {
    "vscode": {
      // Basic settings config.
      // Fine-tune inside the project with .vscode/settings.json file.
      //
      // Use 'settings' to set *default* container specific settings.json values on container create.
      // You can edit these settings after create using File > Preferences > Settings > Remote.
      "settings": {
        // You could redefine this settings with .vscode/settings.json file
        // inside workspace folder.

        // Basic formatting settings.
        "files.insertFinalNewline": true,
        "files.trimTrailingWhitespace": true,

        // Colorize and highlight bracket pairs.
        "editor.guides.bracketPairs": true,
        "editor.bracketPairColorization.enabled": true,

        // This will ignore your local shell user setting for Linux since shells like zsh are typically
        // not in base container images. You can also update this to an specific shell to ensure VS Code
        // uses the right one for terminals and tasks. For example, /bin/bash (or /bin/ash for Alpine).
        "terminal.integrated.defaultProfile.linux": "bash",

        // Require to confirm exit when the terminal is active (helps a lot when accidentally Cmd-Q pressed).
        "terminal.integrated.confirmOnExit": "hasChildProcesses",

        // Controls the maximum amount of lines the terminal keeps in its buffer.
        // Increase to 50000. Default 1000 is too low.
        "terminal.integrated.scrollback": 50000,

        // noku.rails-run-spec-vscode
        "ruby.specCommand":"RAILS_ENV=test bundle exec rspec --color",

        // Ruby LSP settings
        "rubyLsp.formatter": "rubocop",
        "rubyLsp.rubyVersionManager": "rbenv",
        "rubyLsp.enableExperimentalFeatures": true,

        // Ruby LSP advanced semantic highlighting.
        // "workbench.colorTheme": "Spinel",

        // Ruby settings.
        "[ruby]": {
          "editor.formatOnSave": true,
          "editor.formatOnType": true,
          "editor.defaultFormatter": "Shopify.ruby-lsp",
          "editor.rulers": [
            100
          ],
          "editor.tabSize": 2,
          "editor.insertSpaces": true,
          "editor.semanticHighlighting.enabled": true,
          "files.trimFinalNewlines": true
        },

        // Basic launch config for Run and Debug.
        // Fine-tune inside the project with .vscode/launch.json file.
        "launch": {
          // Use IntelliSense to learn about possible attributes.
          // Hover to view descriptions of existing attributes.
          // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
          "version": "0.2.0",
          "configurations": [
            {
              "type": "ruby_lsp",
              "name": "Run current spec line with debugger",
              "request": "launch",
              "program": "bin/rspec ${file}:${lineNumber}"
            },
            {
              "type": "ruby_lsp",
              "name": "Start Rails server with debugger",
              "request": "launch",
              "program": "bin/rails server -b 0"
            }
          ]
        }
      }

// Add the IDs of extensions you want installed when the container is created in the array below.
      // "extensions": [
      //   "Shopify.ruby-extensions-pack",
      //   "dbaeumer.vscode-eslint",
      //   "noku.rails-run-spec-vscode",
      //   "eamodio.gitlens",
      //   "adamwalzer.scss-lint",
      //   "aliariff.slim-lint",
      //   "sianglim.slim",
      //   "jumpinjackie.vscode-map-preview",
      //   "editorconfig.editorconfig",
      //   // "circleci.circleci",
      //   "ms-azuretools.vscode-docker",
      //   // "github.copilot",
      //   "fabianlauer.vs-code-xml-format"
      // ]
    }
  },

  // Uncomment the next line to have VS Code connect as an existing non-root user in the container. See
  // https://aka.ms/vscode-remote/containers/non-root for details on adding a non-root user if none exist.
  // "remoteUser": "vscode",

  // Uncomment the next line if you want start specific services in your Docker Compose config.
  // "runServices": [],

  // Uncomment the next line if you want to keep your containers running after VS Code shuts down.
  // "shutdownAction": "none",

  // Uncomment the next line to run commands after the container is created - for example installing git.
  // "postCreateCommand": "/root/initialization_scripts/post_create.sh",

  // A command string or list of command arguments to run when the container starts (in all cases).
  // The parameters behave exactly like postCreateCommand, but the commands execute on start rather
  // than create. Not set by default.
  "postStartCommand": "/root/initialization_scripts/post_start.sh"
}